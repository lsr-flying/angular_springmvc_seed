<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lsr.springmvc.dao.RoleDAO">
           
         <insert id="insertRole" parameterType="Role">
             INSERT INTO role
             (
                 id,
                 domain_id,
                 role_key,
                 role_name,
                 created_by,
                 created_time
             )
             VALUES
             (
                 #{id},
                 #{domainId},
                 #{roleKey},
                 #{roleName},
                 #{createdBy},
                  now()
             );
         </insert>

        <select id="getRoleList" parameterType="java.util.Map" resultType="Role">
            SELECT
                id as id,
                domain_id as domainId,
                role_key as roleKey,
                role_name as roleName,
                data_status as dataStatus,
                created_by as createdBy,
                created_time as createdTime,
                updated_by as updatedBy,
                updated_time as updatedTime
            FROM role
            WHERE
               1=1
               <if test="domainId!=null">
                   AND domain_id = #{domainId}
               </if>
               <if test="roleKey!=null">
                   AND role_key like CONCAT('%',#{roleKey},'%')
               </if>
               <if test="dataStatus != null">
                   AND data_status = #{dataStatus}
               </if>
            ORDER BY
                created_time desc
        </select>

        <select id="queryRoleDetailById" parameterType="java.lang.String" resultType="Role">
            SELECT
                id as id,
                domain_id as domainId,
                role_key as roleKey,
                role_name as roleName,
                data_status as dataStatus,
                created_by as createdBy,
                created_time as createdTime,
                updated_by as updatedBy,
                updated_time as updatedTime
            FROM role
            WHERE
                id = #{id}
        </select>

        <select id="queryRoleDetailByKey" parameterType="java.lang.String" resultType="Role">
            SELECT
            id as id,
            domain_id as domainId,
            role_key as roleKey,
            role_name as roleName,
            data_status as dataStatus,
            created_by as createdBy,
            created_time as createdTime,
            updated_by as updatedBy,
            updated_time as updatedTime
            FROM role
            WHERE
            role_key = #{roleKey}
        </select>

        <update id="updateRoleById" parameterType="java.util.Map">
            UPDATE role
            <trim prefix="SET" suffixOverrides=",">
                <if test="domainId!=null">
                    domain_id = #{domainId},
                </if>
                <if test="roleKey!=null">
                    role_key = #{roleKey},
                </if>
                <if test="roleName!=null">
                    role_name = #{roleName},
                </if>
                <if test="dataStatus!=null">
                    data_status = #{dataStatus},
                </if>
                <if test="updatedBy!=null">
                    updated_by = #{updatedBy},
                </if>
                updated_time = now()
            </trim>
            WHERE
                id = #{id}
        </update>

    <update id="updateRoleByKey" parameterType="java.util.Map">
        UPDATE role
        <trim prefix="SET" suffixOverrides=",">
            <if test="state!=null">
                domain_id = #{domainId},
            </if>
            <if test="state!=null">
                role_name = #{roleName},
            </if>
            <if test="state!=null">
                data_status = #{dataStatus},
            </if>
            <if test="state!=null">
                updated_by = #{updatedBy},
            </if>
            updated_time = now()
        </trim>
        WHERE
        role_key = #{roleKey}
    </update>

    <delete id="deleteRoleById" parameterType="java.lang.String">
        DELETE FROM role
        WHERE
        id = #{id};
    </delete>

    <delete id="deleteRoleByKey" parameterType="java.lang.String">
        DELETE FROM role
        WHERE
        role_key = #{roleKey}
    </delete>

    <insert id="insertUserRole" parameterType="java.util.Map">
        INSERT INTO link_user_role
        (
            id,
            user_id,
            role_id,
            created_by,
            created_time
        )
        VALUES
        (
            #{id},
            #{userId},
            #{roleId},
            #{createdBy},
            now()
        )
    </insert>

    <delete id="deleteLinkUserRole" parameterType="java.util.Map">
        DELETE FROM link_user_role
        WHERE
            user_id = #{userId}
        AND
            role_id = #{roleId}
    </delete>

    <delete id="deleteLinkRole" parameterType="java.lang.String">
        DELETE FROM link_user_role
        WHERE
            role_id = #{roleId}
    </delete>

    <delete id="deleteLinkUser" parameterType="java.lang.String">
        DELETE FROM link_user_role
        WHERE
            user_id = #{userId}
    </delete>

    <select id="queryUserRole" parameterType="java.util.Map" resultType="Role">
        SELECT
        id as id,
        domain_id as domainId,
        role_key as roleKey,
        role_name as roleName,
        data_status as dataStatus,
        created_by as createdBy,
        created_time as createdTime,
        updated_by as updatedBy,
        updated_time as updatedTime
        FROM role r
        WHERE
        r.id in (
           SELECT lnk.role_id
           FROM link_user_role lnk
           WHERE
           lnk.user_id = #{userId}
        )
        ORDER BY
        created_time desc
    </select>
</mapper>